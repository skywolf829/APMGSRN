[
    [ "train.py",
        {        
            "save_name": "Supernova_test_AMRSRN_medium",
            "model": "AMRSRN",
            "data": "Supernova_test.nc",
            "n_features": 2,
            "n_grids": 16,
            "feature_grid_shape": "32,32,32",
            "n_layers": 2,
            "nodes_per_layer": 64,
            "precondition": false,
            "log_features_every": 100,
            "lr": 0.01
    }],
    [ "train.py",
        {        
            "save_name": "Nyx_AMRSRN_medium",
            "model": "AMRSRN",
            "data": "Nyx.nc",
            "n_features": 2,
            "n_grids": 16,
            "feature_grid_shape": "32,32,32",
            "n_layers": 2,
            "nodes_per_layer": 64,
            "precondition": false,
            "log_features_every": 100,
            "lr": 0.01
    }],
    [ "train.py",
        {        
            "save_name": "Supernova_AMRSRN_medium",
            "model": "AMRSRN",
            "data": "Supernova.nc",
            "n_features": 2,
            "n_grids": 16,
            "feature_grid_shape": "32,32,32",
            "n_layers": 2,
            "nodes_per_layer": 64,
            "precondition": false,
            "log_features_every": 100,
            "lr": 0.01
    }],
    [ "train.py",
        {        
            "save_name": "Plume_AMRSRN_medium",
            "model": "AMRSRN",
            "data": "Plume.nc",
            "n_features": 2,
            "n_grids": 16,
            "feature_grid_shape": "32,32,32",
            "n_layers": 2,
            "nodes_per_layer": 64,
            "precondition": false,
            "log_features_every": 100,
            "lr": 0.01
    }],    
    [ "train.py",
        {        
            "save_name": "Supernova_test_NGP_medium",
            "model": "NGP_TCNN",
            "data": "Supernova_test.nc",

            "n_dims": 3,
            "n_features": 2,
            "n_grids": 16,
            "hash_log2_size": 15,
            "hash_base_resolution": 8,
            "hash_max_resolution": 256,
            "n_layers": 2,
            "nodes_per_layer": 64,
            "n_outputs": 1,

            "lr": 0.01,
            "iterations": 10000,
            "points_per_iteration": 100000,
            "interpolate": true,
            "log_every": 25,
            "log_image": false,
            "log_image_every": 2000
    }],    
    [ "train.py",
        {        
            "save_name": "Supernova_NGP_medium",
            "model": "NGP_TCNN",
            "data": "Supernova.nc",

            "n_dims": 3,
            "n_features": 2,
            "n_grids": 16,
            "hash_log2_size": 15,
            "hash_base_resolution": 8,
            "hash_max_resolution": 256,
            "n_layers": 2,
            "nodes_per_layer": 64,
            "n_outputs": 1,

            "lr": 0.01,
            "iterations": 10000,
            "points_per_iteration": 100000,
            "interpolate": true,
            "log_every": 25,
            "log_image": false,
            "log_image_every": 2000
    }],    
    [ "train.py",
        {        
            "save_name": "Nyx_NGP_medium",
            "model": "NGP_TCNN",
            "data": "Nyx.nc",

            "n_dims": 3,
            "n_features": 2,
            "n_grids": 16,
            "hash_log2_size": 15,
            "hash_base_resolution": 8,
            "hash_max_resolution": 256,
            "n_layers": 2,
            "nodes_per_layer": 64,
            "n_outputs": 1,

            "lr": 0.01,
            "iterations": 10000,
            "points_per_iteration": 100000,
            "interpolate": true,
            "log_every": 25,
            "log_image": false,
            "log_image_every": 2000
    }],    
    [ "train.py",
        {        
            "save_name": "Plume_NGP_medium",
            "model": "NGP_TCNN",
            "data": "Plume.nc",

            "n_dims": 3,
            "n_features": 2,
            "n_grids": 16,
            "hash_log2_size": 15,
            "hash_base_resolution": 8,
            "hash_max_resolution": 256,
            "n_layers": 2,
            "nodes_per_layer": 64,
            "n_outputs": 1,

            "lr": 0.01,
            "iterations": 10000,
            "points_per_iteration": 100000,
            "interpolate": true,
            "log_every": 25,
            "log_image": false,
            "log_image_every": 2000
    }],
    [ "train.py",
        {        
            "save_name": "Supernova_test_fVSRN_medium",
            "model": "fVSRN",
            "data": "Supernova_test.nc",
            "n_features": 4,
            "feature_grid_shape": "64,64,64",
            "n_layers": 2,
            "nodes_per_layer": 64,
            "log_features_every": 100,
            "lr": 0.01
    }],
    [ "train.py",
        {        
            "save_name": "Supernova_fVSRN_medium",
            "model": "fVSRN",
            "data": "Supernova.nc",
            "n_features": 4,
            "feature_grid_shape": "64,64,64",
            "n_layers": 2,
            "nodes_per_layer": 64,
            "log_features_every": 100,
            "lr": 0.01
    }],
    [ "train.py",
        {        
            "save_name": "Nyx_fVSRN_medium",
            "model": "fVSRN",
            "data": "Nyx.nc",
            "n_features": 4,
            "feature_grid_shape": "64,64,64",
            "n_layers": 2,
            "nodes_per_layer": 64,
            "log_features_every": 100,
            "lr": 0.01
    }],
    [ "train.py",
        {        
            "save_name": "Plume_fVSRN_medium",
            "model": "fVSRN",
            "data": "Plume.nc",
            "n_features": 4,
            "feature_grid_shape": "64,64,64",
            "n_layers": 2,
            "nodes_per_layer": 64,
            "log_features_every": 100,
            "lr": 0.01
    }],
    [ "train.py",
        {        
            "save_name": "Isotropic_AMRSRN_medium",
            "model": "AMRSRN",
            "data": "Isotropic.nc",
            "n_features": 2,
            "n_grids": 16,
            "feature_grid_shape": "32,32,32",
            "n_layers": 2,
            "nodes_per_layer": 64,
            "precondition": false,
            "log_features_every": 100,
            "lr": 0.01
    }],
    [ "train.py",
        {        
            "save_name": "Isotropic_NGP_medium",
            "model": "NGP_TCNN",
            "data": "Isotropic.nc",

            "n_dims": 3,
            "n_features": 2,
            "n_grids": 16,
            "hash_log2_size": 15,
            "hash_base_resolution": 8,
            "hash_max_resolution": 256,
            "n_layers": 2,
            "nodes_per_layer": 64,
            "n_outputs": 1,

            "lr": 0.01,
            "iterations": 10000,
            "points_per_iteration": 100000,
            "interpolate": true,
            "log_every": 25,
            "log_image": false,
            "log_image_every": 2000
    }],    
    [ "train.py",
        {        
            "save_name": "Isotropic_fVSRN_medium",
            "model": "fVSRN",
            "data": "Isotropic.nc",
            "n_features": 4,
            "feature_grid_shape": "64,64,64",
            "n_layers": 2,
            "nodes_per_layer": 64,
            "log_features_every": 100,
            "lr": 0.01
    }]
]
